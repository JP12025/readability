#! /usr/bin/env sh

# File to test
EXP_SCRIPT="readability"

# Text colors
COLOR_REST="$(tput sgr0)"
COLOR_RED="$(tput setaf 1)"
COLOR_GREEN="$(tput setaf 2)"

# Test counters
NB_TEST_OK=0
NB_TEST_TOTAL=0

##################################################
# check command line params
##################################################
GIVEN_SCRIPT=""
if [ $# -eq 1 ]
then
    GIVEN_SCRIPT="${1}"
else
    printf "Give the script name in command line\n"
fi

##################################################
# Check if python is available
##################################################
pyapp=`which python`
if [ "${pyapp:0:1}" == "/" ]
then
    python --version
else
    printf "Python not found\n"
    exit
fi

##################################################
# Check if the script has been given
##################################################
if [ "${GIVEN_SCRIPT}" != "${EXP_SCRIPT}" ]
then
    printf "Give the script name in command line\n"
    exit
fi

##################################################
# Check if the given script exists
##################################################
if [ ! -f "${EXP_SCRIPT}" ]
then
    printf "File not found: ${EXP_SCRIPT}\n"
    exit
fi

##################################################
# Test function
##################################################
run_test () {
    TEST_NAME=$1
    TEST_NUM=$2
    TEST_IN=.test/${TEST_NUM}.in
    TEST_EXP=.test/${TEST_NUM}.exp
    TEST_OUT=".test/${TEST_NUM}_test.out"
    TEST_DIFF=".test/${TEST_NUM}_test.diff"
    ./${EXP_SCRIPT} ${TEST_IN}  > ${TEST_OUT}
    diff ${TEST_EXP} ${TEST_OUT} > ${TEST_DIFF}
    NB_DIFF=`cat ${TEST_DIFF} | wc -l`
    NB_TEST_TOTAL=$((NB_TEST_TOTAL+1))
    if [ ${NB_DIFF} -eq 0 ]
    then
        printf "${TEST_NUM} ${COLOR_GREEN}\xE2\x9C\x94${COLOR_REST} ${TEST_NAME}\n"
        rm ${TEST_OUT}
        rm ${TEST_DIFF}
        NB_TEST_OK=$((NB_TEST_OK+1))
    else
        printf "\n"
        printf "${TEST_NUM} ${COLOR_RED}\xE2\x9C\x97${COLOR_REST} ${TEST_NAME}\n"
        printf "${COLOR_GREEN}Expected${COLOR_REST}\n"
        grep "<" ${TEST_DIFF}
        printf "${COLOR_RED}Given${COLOR_REST}\n"
        grep ">" ${TEST_DIFF}
        printf "\n"
    fi
}

##################################################
# Run tests
##################################################
run_test "Readability 01 - grade -1" "01"
run_test "Readability 02 - grade 2" "02"
run_test "Readability 03 - grade 3" "03"
run_test "Readability 04 - grade 5" "04"
run_test "Readability 05 - grade 7" "05"
run_test "Readability 06 - grade 8" "06"
run_test "Readability 07 - grade 8" "07"
run_test "Readability 08 - grade 9" "08"
run_test "Readability 09 - grade 10" "09"
run_test "Readability 10 - grade 16+" "10"
run_test "Readability 11 - grade 10" "11"
run_test "Readability 12 - grade 16+" "12"
run_test "Readability 13 - grade 6" "13"
run_test "Readability 14 - grade 8" "14"
run_test "Readability 15 - grade 12" "15"

##################################################
# Print Summary
##################################################
if [ ${NB_TEST_OK} -eq ${NB_TEST_TOTAL} ]
then
    printf "Validated: ${COLOR_GREEN}${NB_TEST_OK}/${NB_TEST_TOTAL}${COLOR_REST}\n"
else
    printf "Validated: ${COLOR_RED}${NB_TEST_OK}/${NB_TEST_TOTAL}${COLOR_REST}\n"
fi
